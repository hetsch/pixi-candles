{"version":3,"file":"Bars.js","sourceRoot":"","sources":["Bars.ts"],"names":[],"mappings":"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","sourcesContent":["import {Buffer, Geometry, Program, Texture, Renderer} from '@pixi/core';\nimport {CanvasRenderer} from '@pixi/canvas-renderer';\nimport {Mesh, MeshMaterial} from '@pixi/mesh';\nimport {createIndicesForQuads, hex2string} from '@pixi/utils';\nimport {TYPES} from '@pixi/constants';\n\nconst barVert = `\nattribute vec4 aRect;\nattribute vec2 aQuad;\nattribute vec4 aColor;\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform float resolution;\nuniform vec4 uColor;\nuniform float threshold;\n\nvarying vec2 vPos;\nvarying vec4 vDistance;\nvarying vec4 vColor;\n\nvoid main(void){\nvec2 p1 = (translationMatrix * vec3(aRect.xy, 1.0)).xy;\nvec2 p2 = (translationMatrix * vec3(aRect.xy + aRect.zw, 1.0)).xy;\nvec2 size = p2 - p1;\n\nvec2 tQuad = (aQuad * 2.0 - 1.0) * threshold;\nvec2 tWorld = tQuad;\nif (size.x < 0.0) {\n    tWorld.x = -tWorld.x;\n}\nif (size.y < 0.0) {\n    tWorld.y = -tWorld.y;\n}\n\nvec2 localPos = (translationMatrix * vec3(aRect.zw * aQuad, 0.0)).xy;\nvec2 cssPos = (p1 + localPos) + tWorld / resolution;\nvDistance.xy = abs(localPos) * resolution + tQuad;\nvDistance.zw = aRect.zw * resolution;\ngl_Position = vec4((projectionMatrix * vec3(cssPos, 1.0)).xy, 0.0, 1.0);\nvColor = aColor * uColor;\n}`;\nconst barFrag = `\nvarying vec2 vPos;\nvarying vec4 vDistance;\nvarying vec4 vColor;\n\nvoid main(void) {\nvec2 leftTop = max(vDistance.xy - 0.5, 0.0);\nvec2 rightBottom = min(vDistance.xy + 0.5, vDistance.zw);\nvec2 area = max(rightBottom - leftTop, 0.0);\nfloat clip = area.x * area.y;\n\ngl_FragColor = vColor * clip;\n}`;\n\nexport class BarsShader extends MeshMaterial {\n    static _prog: Program = null;\n\n    static getProgram(): Program {\n        if (!BarsShader._prog) {\n            BarsShader._prog = new Program(barVert, barFrag);\n        }\n        return BarsShader._prog;\n    }\n\n    constructor() {\n        super(Texture.WHITE, {\n            uniforms: {\n                resolution: 1,\n                threshold: 1,\n            },\n            program: BarsShader.getProgram()\n        });\n    }\n}\n\nexport class BarsGeometry extends Geometry {\n    constructor(_static = false) {\n        super();\n        this.initGeom(_static);\n        this.reset();\n    }\n\n    lastLen = 0;\n    lastPointNum = 0;\n    lastPointData = 0;\n    points: Array<number> = [];\n    _floatView: Float32Array = null;\n    _u32View: Uint32Array = null;\n    _buffer: Buffer = null;\n    _quad: Buffer = null;\n    _indexBuffer: Buffer = null;\n\n    initGeom(_static: boolean) {\n        this._buffer = new Buffer(new Float32Array(0), _static, false);\n\n        this._quad = new Buffer(new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]), true, false);\n\n        this._indexBuffer = new Buffer(new Uint16Array([0, 1, 2, 0, 2, 3]), true, true);\n\n        this.addAttribute('aRect', this._buffer, 4, false, TYPES.FLOAT, undefined, undefined, true)\n            .addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE, undefined, undefined, true)\n            .addAttribute('aQuad', this._quad, 2, false, TYPES.FLOAT)\n            .addIndex(this._indexBuffer);\n    }\n\n    stridePoints = 5;\n    strideFloats = 5;\n    strideBytes = 20;\n\n    addRect(x: number, y: number, w: number, h: number, color: number) {\n        const {points} = this;\n        points.push(x);\n        points.push(y);\n        points.push(w);\n        points.push(h);\n        points.push(color);\n    }\n\n    invalidate(pointNum = 0) {\n        this.lastPointNum = Math.min(pointNum, this.lastPointNum);\n    }\n\n    reset() {\n        if (this.lastLen > 0) {\n            this.clearBufferData();\n        }\n        this.lastLen = 0;\n        this.lastPointData = 0;\n        this.points.length = 0;\n        this.instanceCount = 0;\n    }\n\n    clearBufferData() {\n        const {points, strideBytes, stridePoints} = this;\n        this.lastPointNum = 0;\n        this.lastPointData = 0;\n        const arrBuf = new ArrayBuffer(strideBytes * points.length / stridePoints);\n        this.lastLen = points.length;\n        this._floatView = new Float32Array(arrBuf);\n        this._u32View = new Uint32Array(arrBuf);\n        this._buffer.update(arrBuf);\n    }\n\n    updateBuffer() {\n        const {points, stridePoints, strideFloats} = this;\n\n        if (this.lastLen > points.length) {\n            this.lastLen = -1;\n        }\n        if (this.lastLen < points.length\n            || this.lastPointNum < this.lastLen) { // TODO: partial upload\n            this.clearBufferData();\n        }\n\n        if (this.lastPointNum == this.lastLen) {\n            return;\n        }\n\n        const {_floatView, _u32View} = this;\n        this.lastPointData = Math.min(this.lastPointData, this.lastPointNum);\n        let j = Math.round(this.lastPointNum * strideFloats / stridePoints); //actually that's int division\n        for (let i = this.lastPointNum; i < points.length; i += stridePoints) {\n            _floatView[j++] = points[i];\n            _floatView[j++] = points[i + 1];\n            _floatView[j++] = points[i + 2];\n            _floatView[j++] = points[i + 3];\n\n            const rgb = points[i + 4];\n            const bgra = ((rgb >> 16) & 0xff) | (rgb & 0xff00) | ((rgb & 0xff) << 16) | (255 << 24);\n            _u32View[j++] = bgra;\n        }\n        this._buffer.update();\n        this.instanceCount = Math.round(points.length / stridePoints);\n\n        this.lastPointNum = this.lastLen;\n        this.lastPointData = this.lastLen; // TODO: partial upload\n\n        if (this.legacyGeom) {\n            this.updateLegacy();\n        }\n    }\n\n    legacyGeom: Geometry = null;\n    legacyBuffer: Buffer = null;\n\n    initLegacy() {\n        if (this.legacyGeom) {\n            return;\n        }\n        this.legacyGeom = new Geometry();\n        this.legacyBuffer = new Buffer(new Float32Array(0), false, false);\n        this.legacyGeom.addAttribute('aRect', this.legacyBuffer, 4, false, TYPES.FLOAT)\n            .addAttribute('aColor', this.legacyBuffer, 4, true, TYPES.UNSIGNED_BYTE)\n            .addAttribute('aQuad', this.legacyBuffer, 2, false, TYPES.FLOAT)\n            .addIndex(new Buffer(new Uint16Array([0, 1, 2, 0, 2, 3]), false, true));\n    }\n\n    updateLegacy() {\n        const {legacyBuffer, _floatView, _u32View, strideFloats} = this;\n        const strideLegacy = 7;\n        const quadsCount = this._floatView.length / strideFloats;\n        const legacyLen = quadsCount * strideLegacy * 4;\n        if ((legacyBuffer.data as Float32Array).length !== legacyLen) {\n            legacyBuffer.data = new Float32Array(legacyLen);\n            this.legacyGeom.getIndex().update(createIndicesForQuads(quadsCount));\n        }\n        const floats: Float32Array = legacyBuffer.data as any;\n        const quad: Float32Array = this._quad.data as any;\n\n        for (let i = 0, j = 0; i < this._floatView.length;) {\n            for (let k = 0; k < 4; k++) {\n                floats[j++] = _floatView[i];\n                floats[j++] = _floatView[i + 1];\n                floats[j++] = _floatView[i + 2];\n                floats[j++] = _floatView[i + 3];\n                floats[j++] = _floatView[i + 4];\n                floats[j++] = quad[k * 2]\n                floats[j++] = quad[k * 2 + 1];\n            }\n            i += strideFloats;\n        }\n        legacyBuffer.update();\n    }\n}\n\nexport class Bars extends Mesh {\n    constructor() {\n        super(new BarsGeometry(), new BarsShader());\n    }\n\n    addRect(x: number, y: number, w: number, h: number, color: number) {\n        const geometry = this.geometry as BarsGeometry;\n        geometry.addRect(x, y, w, h, color);\n    }\n\n    clear() {\n        (this.geometry as BarsGeometry).reset();\n    }\n\n    _renderDefault(renderer: Renderer): void {\n        const geometry = this.geometry as BarsGeometry;\n\n        const useLegacy = !renderer.geometry.hasInstance;\n        if (useLegacy) {\n            geometry.initLegacy();\n        }\n        geometry.updateBuffer();\n        if (geometry.instanceCount === 0) {\n            return;\n        }\n        const rt = renderer.renderTexture.current;\n        this.shader.uniforms.resolution = rt ? rt.baseTexture.resolution : renderer.resolution;\n\n        const multisample = rt ? rt.framebuffer.multisample > 1 : renderer.options.antialias;\n        this.shader.uniforms.threshold = multisample ? 2 : 1;\n\n        if (useLegacy) {\n            // hacky!\n            (this as any).geometry = geometry.legacyGeom;\n            super._renderDefault(renderer);\n            (this as any).geometry = geometry;\n            return;\n        }\n        super._renderDefault(renderer);\n    }\n\n    _renderCanvas(renderer: CanvasRenderer): void {\n        const {points} = this.geometry as BarsGeometry;\n        const {context} = renderer;\n\n        renderer.setContextTransform(this.transform.worldTransform);\n\n        context.beginPath();\n        let clr = -1;\n        for (let i = 0; i < points.length; i += 5) {\n            if (clr !== points[i + 4]) {\n                clr = points[i + 4];\n                let fill = hex2string(clr);\n                context.fillStyle = fill;\n            }\n            context.beginPath();\n            context.rect(points[i], points[i + 1], points[i + 2], points[i + 3]);\n            context.fill();\n        }\n        context.beginPath();\n    }\n}\n"]}